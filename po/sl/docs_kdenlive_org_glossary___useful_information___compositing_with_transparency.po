# Translation of kdenlive Manual to Slovenian
#
# Copyright (C) 2022 This_file_is_part_of_KDE
# This file is distributed under the same license as the kdenlive package.
#
#
# Martin Srebotnjak <miles@filmsi.net>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: kdenlive ref manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-16 00:22+0000\n"
"PO-Revision-Date: 2022-08-20 20:31+0200\n"
"Last-Translator: Martin Srebotnjak <miles@filmsi.net>\n"
"Language-Team: Slovenian <lugos-slo@lugos.si>\n"
"Language: sl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=4; plural=(n%100==1 ? 1 : n%100==2 ? 2 : n%100==3 || n"
"%100==4 ? 3 : 0);\n"
"Translator: Martin Srebotnjak <miles@filmsi.net>\n"
"X-Generator: Poedit 3.1.1\n"
"X-Poedit-SourceCharset: ISO-8859-1\n"

#: ../../glossary/useful_information/compositing_with_transparency.rst:13
#, fuzzy
msgid "Compositing with transparency"
msgstr "Steza skladnje:"

#: ../../glossary/useful_information/compositing_with_transparency.rst:15
#, fuzzy
msgid ""
"When transparency is involved in both frames processed by one of Kdenlive’s "
"dynamic compositing transitions, the outcome may be surprising to some of us "
"users. Luckily, things aren’t as inexplicable as they appear, so let’s dive "
"right into transparency and transitions…"
msgstr ""
"Ko je preglednost vključena v oba okvirja, ki jih obdeluje eden od "
"Kdenlivejevih dinamičnih sestavnih prehodov, je lahko izid za nekatere od "
"nas uporabnikov presenetljiv. Na srečo stvari niso tako razložljive, kot se "
"zdijo, zato se potopimo v preglednost in prehode..."

#: ../../glossary/useful_information/compositing_with_transparency.rst:18
#, fuzzy
msgid "Transparency & Dynamic Transitions"
msgstr "Preglednost & dinamični prehodi"

#: ../../glossary/useful_information/compositing_with_transparency.rst:20
#, fuzzy
msgid ""
"When it comes to handling transparency, Kdenlive’s :ref:"
"`kdenlive_transitions` fall into two categories:"
msgstr ""
"Ko gre za ravnanje s preglednostjo, Kdenlive's :ref:'kdenlive_transitions' "
"spada v dve kategoriji:"

#: ../../glossary/useful_information/compositing_with_transparency.rst:22
#, fuzzy
msgid "**Affine:** uses the so-called **atop** compositing operator."
msgstr "**Affine:** uporablja tako imenovani **atop** sestavni operator."

#: ../../glossary/useful_information/compositing_with_transparency.rst:23
#, fuzzy
msgid ""
"**Composite**, **Composite & Transform**, **Cairo (Affine) Blend**: uses the "
"**over** compositing operator instead."
msgstr ""
"**Composite**, **Composite & Transform**, **Kairo (Affine) Blend**: namesto "
"tega uporablja **over** sestavni operator."

#: ../../glossary/useful_information/compositing_with_transparency.rst:25
#, fuzzy
msgid ""
"So what does these **atop** and **over** really mean? Let’s discover what "
"these compositing operators do using a typical title and semi-transparent "
"background example. For simplicity, we first will ignore the **Opacity** "
"parameter of the aforementioned transitions to keep things easier to grasp. "
"And after we’ve mastered this step, we will finally look at how the opacity "
"parameter fits into the full picture."
msgstr ""
"Kaj torej pomenita ta **atop** in **over** v resnici? Odkrijmo, kaj ti "
"operaterji sestave počnejo s tipičnim naslovom in pol preglednim primerom "
"ozadja. Za preprostost bomo najprej ignorirali **Opacity** parameter prej "
"prejih prehodov, da bo stvari lažje dojeti. In potem, ko bomo obvladali ta "
"korak, bomo končno pogledali, kako se parameter nepreglednosti ujema v "
"celotno sliko."

#: ../../glossary/useful_information/compositing_with_transparency.rst:29
#, fuzzy
msgid "Affine: Atop Compositing"
msgstr "Vstavi skladnjo"

#: ../../glossary/useful_information/compositing_with_transparency.rst:38
#, fuzzy
msgid ""
"The result of the **atop** compositing is best explained at first by showing "
"its outcome: Text from the topmost title clip (partly) vanishes in those "
"regions where the underlying clip on the middle track is (semi) transparent."
msgstr ""
"Rezultat **atop** sestave je najbolje razložiti na začetku s prikazom "
"njegovega izida: Besedilo iz najvišjega naslovnega posnetka (delno) izgine v "
"tistih regijah, kjer je podstavek na srednji progi (pol) pregleden."

#: ../../glossary/useful_information/compositing_with_transparency.rst:40
#, fuzzy
msgid ""
"The checkerboard clip on the bottom track just serves for illustrational "
"purposes, so we can better see the transparent regions."
msgstr ""
"Izrezka kontrolne plošče na spodnji stezi služi le za ilustracijske namene, "
"zato lahko bolje vidimo pregledne regije."

#: ../../glossary/useful_information/compositing_with_transparency.rst:42
#, fuzzy
msgid ""
"Please notice how the two **Affine** transitions are chained: first, the "
"upper Affine composes the title clip onto the gradient background. Then, the "
"lower Affine composes the result onto the checkboard background."
msgstr ""
"Prosimo, upoštevajte, kako sta dva **Affine** prehoda priklenjena: najprej "
"zgornji Affine sešteva naslovni posnetek na ozadje gradienta. Nato spodnji "
"Affine sešteva rezultat na ozadje kontrolne plošče."

#: ../../glossary/useful_information/compositing_with_transparency.rst:51
#, fuzzy
msgid ""
"But how does the **Affine** transition exactly handle transparency? Let’s "
"look at this hand-made illustration, where we have two pixels with some "
"transparency each (the alpha values, αA and αB). It’s important to **not** "
"confuse pixel transparency with the opaque parameter of transitions."
msgstr ""
"Toda kako prehod **Affine** natančno obravnava preglednost? Poglejmo si to "
"ročno izdelano ilustracijo, kjer imamo dva piksla z nekaj preglednosti vsak "
"(alfa vrednosti, αA in αB). Pomembno je, da **ne** zamenjamo prosojnost pik "
"s nepreglednim parametrom prehodov."

#: ../../glossary/useful_information/compositing_with_transparency.rst:53
#, fuzzy
msgid ""
"Our red pixel comes from the upper track frame (B), whereas the green pixel "
"stems from the lower track frame (A). An alpha of 0 means a completely "
"transparent pixel, whereas an alpha of 1.0 (or 255) means totally opaque "
"pixel."
msgstr ""
"Naša rdeča piksla izvira iz okvirja zgornje steze (B), zelena piksla pa iz "
"spodnjega tirnega okvirja (A). Alfa 0 pomeni popolnoma pregleden piksel, "
"alfa 1,0 (ali 255) pa popolnoma nepregledna piksla."

#: ../../glossary/useful_information/compositing_with_transparency.rst:55
#, fuzzy
msgid ""
"The **Affine** transition now simply ignores the transparency information "
"from the upper frame pixel (the red one)."
msgstr ""
"Prehod **Affine** zdaj preprosto ignorira informacije o preglednosti iz "
"zgornjega okvirja piksla (rdeča)."

#: ../../glossary/useful_information/compositing_with_transparency.rst:57
#, fuzzy
msgid ""
"It solely uses the transparency information (green) contained in the lower "
"track frames! Or more mathematical: α = αA"
msgstr ""
"Uporablja samo informacije o preglednosti (zeleno), vsebovati v spodnjih "
"tirnih okvirih! Ali bolj matematično: α = αA"

#: ../../glossary/useful_information/compositing_with_transparency.rst:59
#, fuzzy
msgid ""
"And that’s the explanation why in our example above the title text vanishes "
"in those regions where the middle clip is transparent."
msgstr ""
"In to je razlaga, zakaj v našem primeru nad naslovom besedilo izgine v "
"tistih regijah, kjer je srednji posnetek pregleden."

#: ../../glossary/useful_information/compositing_with_transparency.rst:65
#, fuzzy
msgid "Composite & Co: Over Compositing"
msgstr "Composite & Co: Over Compositing"

#: ../../glossary/useful_information/compositing_with_transparency.rst:74
#, fuzzy
msgid ""
"Again, we basically use the same setup as before, but this time we use "
"**Composite & Transform** in place of **Affine** transitions. We chain the "
"transitions as before, so that the lower transition works on the outcome of "
"the upper transition."
msgstr ""
"Spet v bistvu uporabljamo enako nastavitev kot prej, tokrat pa uporabljamo "
"**Composite & Transform** na mestu **Affine** prehodov. Prehode verigamo kot "
"prej, tako da bo nižji prehod deloval na izidu zgornjega prehoda."

#: ../../glossary/useful_information/compositing_with_transparency.rst:76
#, fuzzy
msgid ""
"But look! The outcome is different! The result of the **over** operator is "
"probably more to the expectations of most users. Now, the top title clip "
"doesn’t get (*sorry*) clipped anymore."
msgstr ""
"Ampak poglej! Izid je drugačen! Rezultat **over** operaterja je verjetno "
"bolj v pričakovanjih večine uporabnikov. Zdaj, zgornji naslov posnetek ne "
"dobili (*žal*) ostriže več."

#: ../../glossary/useful_information/compositing_with_transparency.rst:85
#, fuzzy
msgid ""
"As the **over** operation produces results more to the expectations of many "
"users, how does it handle transparency exactly?"
msgstr ""
"Ker operacija **over** bolj izkaže pričakovanja številnih uporabnikov, kako "
"natančno ravna s preglednostjo?"

#: ../../glossary/useful_information/compositing_with_transparency.rst:87
#, fuzzy
msgid ""
"**Simply spoken:** if you paint some semi-transparent pixel over another "
"semi-transparent pixel, then **the result will be less transparent**. It "
"will be even less transparent than the lower frame pixel transparency. This "
"is what we would probably expect from painting with semi-opaque paint."
msgstr ""
"**Preprosto povedano:** če pobarvaš nekaj pol preglednega piksla preko "
"drugega pol preglednega piksla, potem bo **rezultat manj pregleden**. Še "
"manj pregledna bo od spodnje preglednosti slikovnega okvirja. To bi verjetno "
"pričakovali od slikanja s pol nepregledno barvo."

#: ../../glossary/useful_information/compositing_with_transparency.rst:89
#, fuzzy
msgid ""
"Calculating the resulting transparency for two given pixels from an upper "
"frame (B) and a lower frame (A) is thus more involved this time."
msgstr ""
"Tako je tokrat bolj vključeno izračunavanje posledne preglednosti za dva "
"dana piksla iz zgornjega okvirja (B) in spodnjega okvirja (A)."

#: ../../glossary/useful_information/compositing_with_transparency.rst:91
#, fuzzy
msgid ""
"Again, we start with the transparency of the lower frame pixel (green) as a "
"base. But this time, we can’t ignore the transparency of the (red) upper "
"frame pixel. But simply adding both transparencies wouldn’t yield sensible "
"results; what does a transparency of 2.0 or 511 mean?"
msgstr ""
"Spet začnemo s preglednostjo piksela spodnjega okvirja (zelenega) kot "
"osnove. Tokrat pa ne moremo prezreti preglednosti (rdečega) zgornjega "
"okvirja piksela. Toda preprosto dodajanje obeh preglednosti ne bi prineslo "
"občutljivih rezultatov; kaj pomeni preglednost 2,0 ali 511?"

#: ../../glossary/useful_information/compositing_with_transparency.rst:93
#, fuzzy
msgid ""
"So the red pixel transparency is **scaled**: you may think of shrinking the "
"original 0-1.0 scale into the available space above the green transparency "
"value. The resulting transparency then is the sum of the green base alpha "
"value, plus the rescaled red alpha value. Remember, we kind of paint over "
"the lower frame. For the formular-affines: α = αA + αB (1-αA)"
msgstr ""
"Zato je rdeča piksla preglednost **poudarje**: morda pomislite, da bi se "
"prvotna lestvica 0-1,0 skrčila v razpoložljiv prostor nad zeleno vrednostjo "
"prosojnosti. Rezultat preglednosti je potem vsota zelene osnovne alfa "
"vrednosti, plus preusmerjena rdeča alfa vrednost. Zapomni si, nekako "
"prebarvava spodnji okvir. Za formular-afine: α = αA + αB (1-αA)"

#: ../../glossary/useful_information/compositing_with_transparency.rst:98
#, fuzzy
msgid "Transition Parameter Opacity"
msgstr "Dodatni parametri:"

#: ../../glossary/useful_information/compositing_with_transparency.rst:100
#, fuzzy
msgid ""
"The dynamic compositing transitions also feature a parameter called "
"**Opacity**. It’s easy to confuse it with pixel transparency, but it’s "
"something different. The opacity parameter applies to the upper frames (B) "
"only. It is kind of a master control … but how does it work?"
msgstr ""
"Prehodi dinamičnega sestave so tudi parametri, imenovani **Opacity**. "
"Enostavno ga je zamenjati s preglednostjo piksel, vendar je nekaj drugega. "
"Parameter motnosti velja samo za zgornje okvirje (B). To je kot glavni "
"nadzor... Ampak kako deluje?"

#: ../../glossary/useful_information/compositing_with_transparency.rst:109
#, fuzzy
msgid ""
"Let’s start with the **Affine** transition, again. Above, we’ve seen that "
"Affine ignores the transparency of the (red) upper frame pixels. And Affine "
"also **ignores** the **Opacity** parameter when calculating the result "
"**pixel transparency**."
msgstr ""
"Začnimo z **Affine** prehodom, spet. Zgoraj smo videli, da Affine ignorira "
"preglednost (rdečih) zgornjih okvirnih pik. In Affine tudi **ignorira** "
"parameter **Opacity** pri izračunu rezultatov **preglednost pik**."

#: ../../glossary/useful_information/compositing_with_transparency.rst:111
#, fuzzy
msgid ""
"Instead, the Opacity parameter influences how the result **pixel color** "
"gets calculated: this is a linear interpolation between the color of the "
"upper frame (B) pixel and the lower frame (A) pixel. The Opacity now "
"controls the exact blending point. An opacity of 0.0 results in only the "
"lower frame (B) pixel color, while 1.0 solely yields the upper frame pixel "
"(A) color. 0.5 would be halfway between the two pixel colors."
msgstr ""
"Namesto tega parameter Opacity vpliva na to, kako se izračuna rezultat "
"**barva pik** : to je linearno interpolacijo med barvo zgornjega okvirja (B) "
"piksla in spodnjim okvirjem (A) pikslom. Opacity zdaj nadzoruje točno točko "
"mešanja. Nepreglednost 0,0 ima za rezultat le barvo piksla spodnjega okvirja "
"(B), 1,0 pa daje samo barvo piksla zgornjega okvirja (A). 0,5 bi bil na "
"polovici med dvema barvama pik."

#: ../../glossary/useful_information/compositing_with_transparency.rst:113
#, fuzzy
msgid ""
"To sum up: in case of the **Affine** transition, **the Opacity parameter "
"solely affects color blending** between upper frame (B) and lower frame (A) "
"pixels."
msgstr ""
"Če povzamem: v primeru prehoda **Affine** parameter Opacity vpliva samo na "
"barvno mešanje** med zgornjim okvirjem (B) in piksli spodnjega okvirja (A)."

#: ../../glossary/useful_information/compositing_with_transparency.rst:122
#, fuzzy
msgid "Next, let’s look at the other transitions: **Composite** & Co."
msgstr "Nato si poglejmo še druge prehode: **Composite** & Co."

#: ../../glossary/useful_information/compositing_with_transparency.rst:124
#, fuzzy
msgid ""
"As for the color blending, the same procedure applies that we’ve just seen "
"with the Affine transition: the Opacity parameter controls how much upper "
"frame (B) pixel color gets into the blend."
msgstr ""
"Kar zadeva barvno mešanje, velja enak postopek, kot smo ga pravkar videli s "
"prehodom Affine: parameter Opacity nadzoruje, koliko barve zgornjega okvirja "
"(B) piksle pride v mešanico."

#: ../../glossary/useful_information/compositing_with_transparency.rst:126
#, fuzzy
msgid ""
"But when we look at how the transparency of the resulting pixel gets "
"calculated, things are starting to look different. We’ve seen that the "
"transparency of the upper frame (B) pixel gets scaled down in reverse "
"proportion of the lower frame (A) pixel transparency. The **Opacity** "
"parameter takes this even further: it additionally scales down the upper "
"frame (B) pixel transparency. Please see also the illustration."
msgstr ""
"Ko pa pogledamo, kako se izračuna preglednost rezultatov piksla, se stvari "
"začnejo gledati drugače. Videli smo, da se preglednost zgornjega okvirja (B) "
"piksla zmanjša v obratnem deležu spodnjega okvirja (A) preglednosti pik. "
"Parameter **Opacity** to še dodatno pomaha: dodatno razmahne po zgornjem "
"okvirju (B) preglednosti pik. Oglejte si tudi ilustracijo."

#: ../../glossary/useful_information/compositing_with_transparency.rst:128
#, fuzzy
msgid ""
"In consequence, the Opacity parameter thus controls how much opacity of an "
"upper frame (B) pixel is applied at all. This way, you can fade in or out "
"the upper frame."
msgstr ""
"Zato parameter Opacity tako nadzoruje, koliko nepreglednosti zgornjega "
"okvirja (B) piksela se uporablja. Na ta način lahko zblediš v zgornjem "
"okvirju ali ga iztegneš."

#: ../../glossary/useful_information/compositing_with_transparency.rst:130
#, fuzzy
msgid ""
"To sum up: in case of the **Composite** (&Co) transitions, **the Opacity "
"parameter affects both color blending** of upper frame (B) and lower frame "
"(A) pixels, **as well as transparency of the upper frame (B)**."
msgstr ""
"Če povzamem: v primeru **Composite** (&Co) prehodov, **parameter Opacity "
"vpliva tako na barvno mešanje** zgornjih okvirjev (B) in spodnjega okvirja "
"(A) pik, **kot tudi na preglednost zgornjega okvirja (B)**."

#: ../../glossary/useful_information/compositing_with_transparency.rst:136
msgid "Useful References"
msgstr "Koristne reference"

#: ../../glossary/useful_information/compositing_with_transparency.rst:138
#, fuzzy
msgid ""
"Wikipedia article on `alpha compositing <https://en.wikipedia.org/wiki/"
"Alpha_compositing>`_, with a reference to the original Porter Duff "
"SIGGRAPH’84 paper on «Compositing Digital Images»."
msgstr ""
"Wikipedijin članek o \"alfa sestavnem <https://en.wikipedia.org/wiki/"
"Alpha_compositing>\"_, s sklicevanjem na originalni papir Porter Duff "
"SIGGRAPH'84 o \"Sestava digitalnih slik\"."

#: ../../glossary/useful_information/compositing_with_transparency.rst:139
#, fuzzy
msgid ""
"the SVG Open 2015 paper by Craig Northway on `understanding compositing and "
"color extensions in SVG 1.2 in 30 minutes! <http://www.graphicalweb.org/2005/"
"papers/abstractsvgopen/index.html>`_ – especially the Porter Duff operator "
"table in chapter 6 with resulting alpha calculation column."
msgstr ""
"papir SVG Open 2015, ki ga Craig Northway o \"razumevanje sestave in barvne "
"razširitve v SVG 1.2 v 30 minutah! <http://www.graphicalweb.org/2005/papers/"
"abstractsvgopen/index.html>'_ – zlasti tabela operatorja Porter Duff v "
"poglavju 6 s stolpcem za izračun alfa."
