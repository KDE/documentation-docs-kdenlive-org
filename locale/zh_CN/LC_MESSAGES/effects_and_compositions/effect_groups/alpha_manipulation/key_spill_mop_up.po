msgid ""
msgstr ""
"Project-Id-Version: kdeorg\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-03 00:38+0000\n"
"PO-Revision-Date: 2022-08-13 03:53\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: kdeorg\n"
"X-Crowdin-Project-ID: 269464\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /kf5-trunk/messages/documentation-docs-kdenlive-org/"
"docs_kdenlive_org_effects_and_compositions___effect_groups___alpha_manipulation___key_spill_mop_up."
"pot\n"
"X-Crowdin-File-ID: 26183\n"

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:10
msgid "Key spill mop up"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:12
msgid ""
"This effect is used when using chroma keying (otherwise known as greenscreen "
"or :ref:`blue_screen` effect). Its purpose is to compensate for the fact "
"that sometimes the color from the green or blue screen reflects onto the "
"subject and will make them a shade of blue or green - especially around the "
"edges. This is known as \"keyspill\". This effect can attempt to compensate "
"for this issue."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:15
msgid "Tutorial"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:17
msgid "Contents"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:19
msgid ""
"This tutorial shows usage of the following effects: Key Spill Mop Up, blue "
"screen, alpha operations - shrinkhard and denoiser."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:21
msgid ""
"Note: **This video is outdated.** In newer versions of Kdenlive have the :"
"ref:`keysplillm0pup` effect installed by default, and it is no longer "
"required to use a composite transition."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:23
msgid "https://youtu.be/l43Hz7YEcYU"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:26
msgid "Details"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:28
msgid "The :file:`README` file for the Key Spill Mop Up is this:"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:30
msgid "DESCRIPTION:"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:32
msgid ""
"After some experimentation with chroma keying, it looked to me that there is "
"no single method of key cleaning, that works in all situations, like "
"keyspill on bright, keyspill on dark, etc. So I included several cleaning "
"options, which can be used alone or in combination. In short, it offers "
"three ways of pixel selection (masking), that can be combined with four "
"types of color changing operations. The three selection / masking modes are "
"based on:"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:34
msgid "similarity to key color"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:35
msgid "transparency"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:36
msgid "closeness to the edge"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:38
msgid "and the four things that can be done to the selected pixels are:"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:40
msgid "move away from the key color (De-Key)"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:41
msgid "move towards an target color (Target)"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:42
msgid "desaturate"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:43
msgid "luma (brightness) adjust."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:45
msgid "MASKS:"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:47
msgid ""
"Color difference masks are based on the color of the image, and do not "
"depend on the alpha from the preceding keying, except for ignoring the 100% "
"transparent areas, to increase speed."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:49
msgid ""
"Transparency and Edge masks are based on the alpha channel from the "
"preceding keying operation. Transparency masks will affect only the parts "
"that are neither 100% opaque nor 100% transparent, based on the alpha values "
"from the preceding keying operation. The effect will be proportional to the "
"transparency."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:53
msgid ""
"If a \"hard key\" was used in the preceding keying, there will be no areas "
"that T operations could affect. Edge masks will affect only pixels close to "
"the edge, with the effect diminishing away from the edge. The outer edge is "
"the edge of the fully opaque part, where the alpha from the preceding keying "
"is 1.0 (255)."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:57
msgid ""
"The edge masking algorithm is not yet what I would like it to be. I will "
"have to look some more into this, and improve it, so consider it a "
"\"temporary solution\" that will change in the future."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:59
msgid ""
"All masks can be further pruned with two parameters: an \"hue gate\", which "
"will limit the mask to hues close to the key hue, and an \"saturation "
"threshold\", which will limit the mask to areas with color saturation above "
"a threshold."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:61
msgid "CASCADING:"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:63
msgid ""
"This plugin can be cascaded, but it is not possible to get the same color "
"based mask in the second instance, because the colors will be changed by the "
"first instance. To enable two operations with the same mask, each plugin "
"instance can do two operations. With transparency and edge masks, cascading "
"is a bit easier. If the hue gate and saturation threshold are not used, "
"transparency and edge masks can be exactly the same in cascaded plugins."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:65
msgid "PARAMETERS:"
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:67
msgid ""
"Key color: This should be the same or similar to the key color used for the "
"preceding keying operation."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:69
msgid ""
"Target color: This is only used when \"Target\" operation is used with one "
"of the masks. The colors in the affected areas will be moved towards this "
"color, according to the \"Amount\" parameter."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:71
msgid ""
"Mask type: Selects the type of mask that will determine where the color "
"altering operations will occur."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:73
msgid ""
"Tolerance: For the color difference mask, the range of colors around the "
"key, that will be 100% affected. For the transparency mask, the "
"\"amplification\". For the edge mask, the width of the affected area."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:75
msgid ""
"Slope: For the color difference mask, the range of colors outside of "
"\"Tolerance\", that will be gradually less affected. No function for the "
"transparency and edge masks."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:77
msgid ""
"Hue gate: Reduces the mask according to difference from key hue, to prevent "
"change to pixels that are within the mask, but not polluted by key."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:79
msgid ""
"Saturation threshold: Reduces the mask according to color saturation, to "
"avoid affecting the neutral areas."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:81
msgid ""
"Operation 1: Selects which of the four possible operations will be done on "
"the mask-selected pixels. Apart from no operation, there are four "
"possibilities: De-key, Target, De-saturate and Luma adjust."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:83
msgid ""
"Amount 1: The amount of the selected operation 1, how much the colors will "
"change."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:85
msgid ""
"Operation 2, Amount 2: Enable a second operation to be performed with the "
"same mask."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:87
msgid ""
"Show mask: This will show the selected mask as a greyscale image, to help "
"with fine tuning of the masks. Should be OFF for the final render."
msgstr ""

#: ../../effects_and_compositions/effect_groups/alpha_manipulation/key_spill_mop_up.rst:89
msgid ""
"Mask to Alpha: Copies the active mask to the alpha channel. For all normal "
"spill cleaning operations, this should be OFF. By setting it ON, the Key "
"Spill Mop Up itself can be used as a keyer, or to generate some special "
"effects."
msgstr ""
